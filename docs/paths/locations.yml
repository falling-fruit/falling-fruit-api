get:
  summary: Fetch Location summaries.
  tags:
    - Locations
  security:
    - key: []
  parameters:
    - name: ids
      in: query
      description: Location IDs. If provided, other filters (`bounds`, `muni`, `types`, `invasives`) are ignored.
      explode: false
      schema:
        type: array
        uniqueItems: true
        items:
          type: integer
          minimum: 0
        default: null
        example: [3383, 3384]
    - name: bounds
      in: query
      description: The southwest and northeast corners of the bounding box in WGS84 decimal degrees, in the format `swlat,swlng|nelat,nelng`. Latitude must be in the interval [-85.0511, 85.0511] and longitude must be in the interval [-180, 180]. Required if `center` is not provided.
      explode: false
      style: pipeDelimited
      schema:
        type: array
        minItems: 2
        maxItems: 2
        items:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
            minimum: -180
            maximum: 180
        example: [[-5, -180], [5, 180]]
    - name: center
      in: query
      description: Center `latitude,longitude` in WGS84 decimal degrees. If provided, Locations are returned in order of increasing distance and the distance to each Location is returned. Longitude must be in the interval [-180, 180] and latitude in the interval [-90, 90].
      explode: false
      schema:
        type: array
        minItems: 2
        maxItems: 2
        items:
          type: number
          minimum: -180
          maximum: 180
        example: [1.359, 103.807]
    - $ref: ../components/parameters.yml#/muni
    - $ref: ../components/parameters.yml#/types
    - $ref: ../components/parameters.yml#/invasive
    - name: limit
      in: query
      description: Maximum number of Locations to return.
      schema:
        type: integer
        minimum: 0
        default: 1000
    - $ref: ../components/parameters.yml#/offset
    - name: photo
      in: query
      description: Whether to include the path to a review photo thumbnail, if available.
      schema:
        type: boolean
        default: false
    - name: count
      in: query
      description: Whether to include the total number of locations matching the query in the `x-total-count` header.
      schema:
        type: boolean
        default: false
    - name: locale
      in: query
      description: Whether (and in which language) to include a name for each Location Type, as an ISO 639-1 language code or `scientific` for the scientific (latin) name (applicable to lifeforms only). To guarantee that the name is not null, the first non-null name is provided from the requested locale, `en` (English), or `scientific`. Ignored if `center` is provided.
      schema:
        type: string
        deprecated: true
  responses:
    '200':
      description: Success
      headers:
        x-total-count:
          schema:
            type: integer
          description: |-
            Total number of locations meeting the query conditions (if `count=true`).
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas.yml#/ListLocation
post:
  tags:
    - Locations
  summary: Create a Location.
  description: A `review` can be included, in which case the result includes the `reviews` property.
  security:
    - key: []
    - key: []
      token: []
  parameters:
    - $ref: ../components/parameters.yml#/recaptcha
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../components/schemas.yml#/AddLocation
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            $ref: ../components/schemas.yml#/Location
